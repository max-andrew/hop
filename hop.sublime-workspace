{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Transac",
				"TransactionResponse"
			],
			[
				"Trans",
				"TransactionResponse"
			],
			[
				"align",
				"alignCenter"
			],
			[
				"chains",
				"chainsSortedByAPR"
			],
			[
				"token",
				"tokenSymbol"
			],
			[
				"goTo",
				"goToNextSection"
			],
			[
				"selected",
				"selectedNetwork"
			],
			[
				"pool",
				"poolStats"
			],
			[
				"destinationNet",
				"destinationNetworkId"
			],
			[
				"get",
				"getNetworksWithYields"
			],
			[
				"destinationNe",
				"destinationNetworkNetwork"
			],
			[
				"N",
				"NetworkSelector"
			],
			[
				"slug",
				"ChainSlug"
			],
			[
				"min",
				"minAmount"
			],
			[
				"minA",
				"minAmount"
			],
			[
				"chain",
				"chainSlug"
			],
			[
				"des",
				"destinationNetworkSlug"
			],
			[
				"bridge",
				"bridgeTxHash"
			],
			[
				"bridgeT",
				"bridgeTxHash"
			],
			[
				"succes",
				"successfully"
			],
			[
				"lpTok",
				"lpTokenBalance"
			],
			[
				"approv",
				"approveTx"
			],
			[
				"tok",
				"tokenSymbol"
			],
			[
				"op",
				"optimismHETH"
			],
			[
				"is",
				"isUserConfiguring"
			],
			[
				"set",
				"setIsUserConfiguring"
			],
			[
				"outlets",
				"selectedOutlets"
			],
			[
				"outlet",
				"outletSelectors"
			],
			[
				"space-",
				"space-y-12"
			],
			[
				"Conf",
				"ConfigScreen"
			],
			[
				"Feed",
				"FeedScreen"
			],
			[
				"show",
				"showConfig"
			],
			[
				"shuff",
				"shuffled_feed_keys"
			],
			[
				"shuffle",
				"shuffled_feed_keys"
			],
			[
				"feed",
				"feedInProgress"
			],
			[
				"fee",
				"feedInProgress"
			],
			[
				"sou",
				"sound_file_name"
			],
			[
				"FEE",
				"feedInProgress"
			],
			[
				"fe",
				"feedInProgress"
			],
			[
				"artic",
				"article_index"
			],
			[
				"articles",
				"maxArticlesPerOutlet"
			],
			[
				"head",
				"headlinesPerPage"
			],
			[
				"feed_",
				"feed_keys"
			],
			[
				"sele",
				"selected_outlet"
			],
			[
				"curre",
				"currentPage"
			],
			[
				"cur",
				"currentPage"
			],
			[
				"curren",
				"currentPage"
			],
			[
				"CURREN",
				"currentPage"
			],
			[
				"fade",
				"fadeIn"
			],
			[
				"Curr",
				"currencyType"
			],
			[
				"collec",
				"collectionID"
			],
			[
				"ser",
				"serialNumber"
			],
			[
				"d",
				"flexDirection"
			],
			[
				"ac",
				"activity"
			],
			[
				"has",
				"hasFilters"
			],
			[
				"col",
				"collectionMarketplace"
			],
			[
				"getF",
				"getFullImageCloudinaryURL"
			],
			[
				"font-",
				"font-bold"
			],
			[
				"netw",
				"networkDefaults"
			],
			[
				"OP",
				"OPTIMISM_KOVAN_CHAIN_ID"
			],
			[
				"wallet",
				"walletconnect"
			],
			[
				"use",
				"useActivatingConnector"
			],
			[
				"right",
				"rightokenAddress"
			],
			[
				"I",
				"INonfungiblePositionManager"
			],
			[
				"networ",
				"networkDefaults"
			],
			[
				"space",
				"space-y-9"
			],
			[
				"max",
				"max-w-xs"
			],
			[
				"cu",
				"currentStepInSessionStorage"
			],
			[
				"art",
				"artistName"
			],
			[
				"su",
				"successCondition"
			],
			[
				"trie",
				"triedEager"
			],
			[
				"text",
				"text-center"
			],
			[
				"user",
				"userPrompts"
			],
			[
				"font-m",
				"font-medium"
			],
			[
				"just",
				"justify-self-start"
			],
			[
				"acce",
				"acceptableTestNetworks"
			],
			[
				"cr",
				"cryptoPro"
			],
			[
				"song",
				"songTitle"
			],
			[
				"resea",
				"resaleRoyaltyPercent"
			],
			[
				"legal",
				"legalAgreement"
			],
			[
				"lega",
				"legalAgreementLibrary"
			],
			[
				"sect",
				"sectionsIncluded"
			],
			[
				"spac",
				"space-y-2"
			],
			[
				"term",
				"termCustomization"
			],
			[
				"reset",
				"resetFormValues"
			],
			[
				"aud",
				"audioFileError"
			],
			[
				"artist",
				"artistNameError"
			],
			[
				"setau",
				"setAudioFileNameError"
			],
			[
				"setSong",
				"setSongTitleError"
			],
			[
				"a",
				"audioFileName"
			],
			[
				"place",
				"place-items-center"
			],
			[
				"te",
				"text-sm"
			],
			[
				"wa",
				"walletAppSelected"
			],
			[
				"Right",
				"rightokenBalance"
			],
			[
				"mati",
				"maticProvider"
			],
			[
				"We",
				"Web3Provider"
			],
			[
				"Web",
				"Web3DebugPanel"
			],
			[
				"getE",
				"getConnectedWalletApp"
			],
			[
				"connec",
				"connectWallet"
			],
			[
				"connect",
				"connectWallet"
			],
			[
				"wal",
				"walletAppSelected"
			],
			[
				"font",
				"font-semibold"
			],
			[
				"wall",
				"walletAppSelected"
			],
			[
				"conn",
				"connectWallet"
			],
			[
				"acti",
				"activatingConnector"
			],
			[
				"t",
				"text-sm"
			],
			[
				"justi",
				"justify-self-end"
			],
			[
				"pla",
				"place-self-center"
			],
			[
				"bg",
				"bg-gray-100"
			],
			[
				"Logo",
				"rightoken-logo"
			],
			[
				"jso",
				"jsonContent"
			],
			[
				"code",
				"code_request"
			],
			[
				"Mee",
				"MeetTheTeamSlide"
			],
			[
				"backgrou",
				"backgroundSize"
			],
			[
				"NO",
				"NogrammerButton"
			],
			[
				"Georg",
				"GeorgeEdwardsImage"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"upda",
				"Package Control: Upgrade Package"
			],
			[
				"package",
				"Preferences: Package Control Settings"
			],
			[
				"Package Control Setting",
				"Preferences: Package Control Settings"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/maxandrew/Sandbox/hop"
	],
	"file_history":
	[
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Modal.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/Wrap.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/Unwrap.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/Deposit.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/BridgingStatus.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/Bridge.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/UnstakeWithdraw.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/Stake.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/config/config.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/config/types.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/networks/goerli.js",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/models/Chain.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/constants/constants.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/index.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/contexts/Web3Context.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/HopBridge.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/hooks/useEstimateTxCost.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/package.json",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Convert/ConvertOption/HopConvertOption.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/config/metadata.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/modal/TxStatusModal.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/NetworkSelection.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Send/Send.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolsOverview/PoolsOverview.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolDetails/PoolDetails.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/constants/index.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/index.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/utils/getTransferTimeString.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/utils/getTransferTimeMinutes.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolDetails/TopPoolStats.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/usePoolStats.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/addresses/goerli.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/TokenWrapper/TokenWrapperContext.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/AmountSelectorCard.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/TokenWrapper/TokenWrapper.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/core/README.md",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/Subsections/StatusMessage.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Sections/Subsections/Header.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/hop-node/src/provider/provider.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/TxList.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/NetworkSelector/RaisedNetworkSelector.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/addresses/types.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/Base.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/config/goerli.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/abis/types/factories/ENSToken__factory.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Rebalancer/Footer.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/selects/RaisedSelect.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolDetails/useStyles.tsx",
		"/Users/maxandrew/Sandbox/portfolio/app/page.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/modal/RebalanceModal.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/AddLiquidity.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/useStaking.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/buttons/StyledButton.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/Button/Button.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolsContext.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/AddLiquidityAndStake.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/hooks/useBalance.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/TxConfirm.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/modal/StyledModal.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/models/Transaction.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/utils/networks.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Send/SendAmountSelectorCard.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/models/Network.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/components/InputField.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/networks/mainnet.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/addresses/mainnet.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/config/index.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/abi/index.js",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/hooks/useSelectedNetwork.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/hooks/useTransactionStatus.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/core/addresses/goerli.js",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Send/useSendTransaction.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/abi/generated/L2_Bridge.json",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/watchers/L1ToL2Watcher.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/InfoTooltip/FeeDetails.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/hop-node/test/utils/helpers.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/config/addresses.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/networks/goerli.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/metadata/chains.ts",
		"/Users/maxandrew/Sandbox/hop/packages/api/README.md",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolsOverview/usePools.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/hop-node/src/cli/swap.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/metadata/goerli.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Claim/useClaim.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/config/mainnet.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/config/goerli.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/provider/index.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/provider/Provider.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/contexts/AppContext/AppContext.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/contexts/AppContext/useBridges.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/config/networks.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/Hop.ts",
		"/Users/maxandrew/Sandbox/hop/packages/sdk/src/config/config.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/contexts/AppContext/useSettings.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/utils/createTransaction.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/NetworkSelector/NetworkSelector.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/header/ConnectWalletButton.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/networks/kovan.ts",
		"/Users/maxandrew/Sandbox/hop/packages/core/src/abi/generated/Swap.json",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/utils/queries.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/utils/getBonderFeeWithId.ts",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Send/index.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/core/abi/generated/Swap.json",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/hooks/useTransaction.ts",
		"/Users/maxandrew/Library/Mobile Documents/com~apple~CloudDocs/Documents/Carestaker/Hop/Sybil known addresses",
		"/Users/maxandrew/Library/Mobile Documents/com~apple~CloudDocs/Documents/Self/Jobs/Braintrust/React experience",
		"/Users/maxandrew/Library/Mobile Documents/com~apple~CloudDocs/Documents/Self/Jobs/Braintrust/Node experience",
		"/Users/maxandrew/Library/Mobile Documents/com~apple~CloudDocs/Documents/Carestaker/Hop/Chris call 3-27",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/WithdrawReview.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Withdraw/Withdraw.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/footer/useBlockNumber.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/accountDetails/AccountDetails.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/modal/Modal.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/WithdrawStake.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/UnstakeAndRemoveLiquidity.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/core/abi/static/L2_BridgeWrapper.json",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/abis/MerkleRewards.json",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/components/txConfirm/RemoveLiquidity.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolDetails/DepositForm.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Transaction/TransactionDetails.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/AppRoutes.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/App.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolDetails/index.tsx",
		"/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools/PoolDetails/StakeForm.tsx",
		"<untitled 273>",
		"/Users/maxandrew/Sandbox/briefly/components/HeadlineBlock.js",
		"/Users/maxandrew/Sandbox/portfolio/tailwind.config.js",
		"/Users/maxandrew/Sandbox/briefly/package.json"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 134.0,
		"where_history":
		[
			"<project>,<current file>,<open files>,<open folders>",
			"<project>,<current file>,<open files>,<open folders>,-*.doc,*.txt"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"erc20PositionBalance",
			"currentStep",
			"gasLimit",
			"BridgeSection",
			"gasLimi",
			"UnstakeWithdraw",
			"gasLimit",
			"StakeSection",
			"gasLimit",
			"gasLimt",
			"const wDAIContract = new ethers.Contract(wDAIContractAddress, wDAIAbi, signer)",
			" const wethContract = new ethers.Contract(wETHContractAddress, wethAbi, signer)",
			"const wETHContractAddress = (addresses as any)?.[reactAppNetwork]?.bridges?.[tokenSymbol]?.[chainSlug]?.l2CanonicalToken",
			"const wethAbi = [\"function withdraw(uint wad) public\"]",
			"Transaction",
			"gasLimit",
			"DAI",
			"()\n",
			"()      ",
			"DAI",
			"gasLimit",
			"currentSte",
			"DepositSection",
			"/DepositSection",
			"gasLimit: ",
			"estimateGas",
			"estimate",
			"estimateGas",
			"gasEstimate",
			"ChainSlug",
			"Linea",
			"metadata",
			"Scroll",
			"Linea",
			"linea",
			"adjustedBonderFee",
			"My Liquidity",
			"poolStats",
			"Add liquidity to",
			"poolStats",
			"console.l",
			"*",
			"bonderFee",
			"isNat",
			"console.log",
			"current",
			"networkSelection",
			"connected",
			"toSlug",
			"userPool",
			"poolStats",
			"checkConnectedNetwork",
			"bridgedFromNetworkId",
			"chainSlug",
			"sourceNet",
			"sourceNetwork",
			"bridgedFromNetworkId",
			"sourceNet",
			"networkSlug",
			"PoolDeta",
			"sourceNetw",
			"chainSlug",
			"sourceNetwork",
			"checkCon",
			"network",
			"poolStats",
			"transfer",
			"getTransferTimeMinutes",
			"getTransferTimeString",
			"confirm",
			"time to confirm",
			"15",
			"chainSlug",
			"hasBalance",
			"[",
			"useEffect",
			"use",
			"isNativeTokens",
			"Stake below",
			"poolStats:",
			"poolStats",
			"poolSt",
			"rebalancer",
			"poolStats",
			"usePoolStats",
			"hopMetadata",
			"nativeToken",
			"canonicalToken",
			"canonicalToken?.",
			"isNativeToken",
			"isNative",
			"canonicalToken",
			"isNativeToken",
			"TokenWrapper",
			"/hooks",
			"TokenWrapperContext",
			"(tokenSymbol === \"DAI\" && chainSlug === \"gnosis\")",
			"isNativeToken",
			"isNativeToken(",
			"isNativeToken",
			"useEstimateTxCost",
			"isNative",
			"isNativeToken",
			"tokenSymbol === \"DAI\" && chainSlug === \"gnosis\"",
			"nativetoken",
			"native",
			"goerli",
			"addresses/goerli",
			"addresses",
			"goerli",
			"approve",
			"source",
			"sourceChain",
			"BridgeSection",
			"Bridgeg",
			"source",
			"erc",
			"UnwrapSection",
			"* ",
			"UnstakeWithdraw",
			"source",
			"message",
			"checkBridgeStatusAndGetBondHash",
			"BridgeStatus",
			"gaslimit",
			"UnwrapSection",
			"gasLimit",
			"console.log(error"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/Users/maxandrew/Sandbox/hop"
		},
		{
			"path": "/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Send"
		},
		{
			"path": "/Users/maxandrew/Sandbox/hop/packages/frontend/src/pages/Pools"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 235.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"formatCurrency"
			],
			[
				"formatCurrency",
				"formatCurrency"
			]
		],
		"width": 580.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
